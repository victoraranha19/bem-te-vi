{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bem-Te-Vi",
	"scopeName": "source.btv",
	"patterns": [
		{
			"include": "#code"
		}
	],
	"repository": {
		"all-types": {
			"patterns": [
				{
					"include": "#primitive-types"
				},
				{
					"include": "#object-types"
				}
			]
		},
		"code": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#constants-and-special-vars"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#method-call"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#objects"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#all-types"
				},
				{
					"match": ",",
					"name": "punctuation.separator.delimiter.bemtevi"
				},
				{
					"match": "\\.",
					"name": "punctuation.separator.period.bemtevi"
				},
				{
					"match": ";",
					"name": "punctuation.terminator.bemtevi"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.bemtevi"
						}
					},
					"match": "{}",
					"name": "comment.block.empty.bemtevi"
				},
				{
					"include": "#comments-inline"
				}
			]
		},
		"comments-inline": {
			"patterns": [
				{
					"begin": "{",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.bemtevi"
						}
					},
					"end": "}",
					"name": "comment.block.bemtevi"
				},
				{
					"begin": "(^[ \\t]+)?(?=\\-\\-)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.bemtevi"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "\\-\\-",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.bemtevi"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-hyphen.bemtevi"
						}
					]
				}
			]
		},
		"constants-and-special-vars": {
			"patterns": [
				{
					"match": "\\b(verdade|falso)\\b",
					"name": "constant.language.bemtevi"
				},
				{
					"match": "\\bobjeto\\b",
					"name": "variable.language.objeto.bemtevi"
				}
			]
		},
		"function-call": {
			"begin": "([a-z][a-zA-Z_]*)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.bemtevi"
				},
				"2": {
					"name": "punctuation.definition.parameters.begin.bracket.round.bemtevi"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.bracket.round.bemtevi"
				}
			},
			"name": "meta.function-call.bemtevi",
			"patterns": [
				{
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bemtevi",
					"match": "\\b(se|entao|senao)\\b"
				},
				{
					"match": "(==|<=|<)",
					"name": "keyword.operator.comparison.bemtevi"
				},
				{
					"match": "(=)",
					"name": "keyword.operator.assignment.bemtevi"
				},
				{
					"match": "(\\+|\\-|\\*|\\/|%)",
					"name": "keyword.operator.arithmetic.bemtevi"
				},
				{
					"match": "(!|e|ou)",
					"name": "keyword.operator.logical.bemtevi"
				}
			]
		},
		"method-call": {
			"begin": "(\\.)\\s*([a-z][a-zA-Z_]*)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "punctuation.separator.period.bemtevi"
				},
				"2": {
					"name": "entity.name.function.bemtevi"
				},
				"3": {
					"name": "punctuation.definition.parameters.begin.bracket.round.bemtevi"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.bracket.round.bemtevi"
				}
			},
			"name": "meta.method-call.bemtevi",
			"patterns": [
				{
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "(?x)\n(?<!\\$)\n(\n  \\b\\d+?,\\B(?!,)\n  |\n  \\b\\d+?,[Ee][+-]?\\d+\\b\n  |\n  \\b\\d+,([Ee][+-]?\\d+)?\\b\n  |\n  \\b\\d+,\\d+([Ee][+-]?\\d+)?\\b\n  |\n  (?<!,)\\B,\\d+([Ee][+-]?\\d+)?\\b\n  |\n  \\b\\d+([Ee][+-]?\\d+)\\b\n  |\n  \\b\\d+([Ee][+-]?\\d+)?\\b\n  |\n  \\b\\d+(?!,)\\b\n)\n(?!\\$)",
					"name": "constant.numeric.decimal.bemtevi"
				}
			]
		},
		"object-types": {
			"patterns": [
				{
					"begin": "\\b((?:[a-z][a-zA-Z_]*\\s*\\.\\s*)*)([a-z][a-zA-Z_]*)\\s*(?=\\[)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "[a-z][a-zA-Z_]*",
									"name": "storage.type.bemtevi"
								},
								{
									"match": "\\.",
									"name": "punctuation.separator.period.bemtevi"
								}
							]
						},
						"2": {
							"name": "storage.type.object.array.bemtevi"
						}
					},
					"end": "(?!\\s*\\[)",
					"patterns": [
						{
							"include": "#comments"
						},
						{
						}
					]
				},
				{
					"match": "\\b((?:[a-z][a-zA-Z_]*\\s*\\.\\s*)*[a-z][a-zA-Z_]*)\\b(?=\\s*[A-Za-z_\\n])",
					"captures": {
						"1": {
							"patterns": [
								{
									"match": "[a-z][a-zA-Z_]*",
									"name": "storage.type.bemtevi"
								},
								{
									"match": "\\.",
									"name": "punctuation.separator.period.bemtevi"
								}
							]
						}
					}
				}
			]
		},
		"objects": {
			"match": "(?<![\\w])[a-z][a-zA-Z_]*(?=\\s*\\.\\s*[a-z][a-zA-Z_]*)",
			"name": "variable.other.object.bemtevi"
		},
		"parameters": {
			"patterns": [
				{
					"include": "#all-types"
				},
				{
					"include": "#strings"
				},
				{
					"match": "[a-z][a-zA-Z_]*",
					"name": "variable.parameter.bemtevi"
				},
				{
					"match": "|",
					"name": "punctuation.separator.delimiter.bemtevi"
				}
			]
		},
		"primitive-types": {
			"match": "\\b(Bool|Numero|Texto)\\b",
			"name": "storage.type.primitive.bemtevi"
		},
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.bemtevi"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.bemtevi"
						}
					},
					"name": "string.quoted.double.bemtevi",
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.bemtevi"
						}
					]
				}
			]
		}
	}
}